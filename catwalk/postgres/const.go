package postgres

var SQLS = map[string]string{
	"Sequences":      "SELECT * FROM pg_catalog.pg_sequences WHERE schemaname = ? AND sequencename = ?;",
	"Tables":         `SELECT pg_tables.*,pg_tables.schemaname as "TABLE_SCHEMA",pg_tables.tablename as "TABLE_NAME",pg_description.description as "TABLE_COMMENT" FROM pg_catalog.pg_tables JOIN pg_catalog.pg_class ON pg_class.relname = pg_tables.tablename LEFT JOIN pg_catalog.pg_description ON pg_class.oid = pg_description.objoid AND pg_description.objsubid = 0 WHERE pg_tables.schemaname NOT IN ('pg_catalog','information_schema');`,
	"Indexes":        `SELECT pg_indexes.*,pg_indexes.indexname as "INDEX_NAME",table_constraints.constraint_type as "TYPE" FROM pg_catalog.pg_indexes LEFT JOIN information_schema.table_constraints ON pg_indexes.indexname = table_constraints.constraint_name WHERE schemaname NOT IN ('pg_catalog','information_schema') AND tablename = ?;`,
	"IndexColumn":    `SELECT pg_attribute.attname as "COLUMN_NAME" FROM pg_catalog.pg_attribute LEFT JOIN pg_catalog.pg_class ON pg_attribute.attrelid = pg_class.oid WHERE pg_class.relname = ? ORDER BY pg_attribute.attnum;`,
	"Foreignkeys":    `SELECT table_constraints.*, f.attname as "COLUMN_NAME", table_constraints.table_name as "CONSTRAINT_NAME", t.relname as "REFERENCED_TABLE_NAME", r.attname as "REFERENCED_COLUMN_NAME" FROM information_schema.table_constraints JOIN pg_catalog.pg_constraint ON table_constraints.constraint_name = pg_constraint.conname JOIN pg_catalog.pg_class as i ON pg_constraint.conindid = i.oid JOIN pg_catalog.pg_class as t ON pg_constraint.confrelid = t.oid JOIN pg_catalog.pg_attribute as f ON pg_constraint.conrelid = f.attrelid AND f.attnum = any(pg_constraint.conkey) JOIN pg_catalog.pg_attribute as r ON pg_constraint.confrelid = r.attrelid AND r.attnum = any(pg_constraint.confkey) WHERE table_schema NOT IN ('pg_catalog','information_schema') AND table_name = ? AND constraint_type = 'FOREIGN KEY';`,
	"CreateDatabase": "CREATE DATABASE ? OWNER = ? ENCODING = 'UTF8' TABLESPACE = pg_default",
	"CreateSchema":   "CREATE SCHEMA IF NOT EXISTS ?",
	"Columns":        `SELECT columns.*, columns.column_name as "COLUMN_NAME", columns.udt_name "COLUMN_TYPE", columns.column_default as "COLUMN_DEFAULT", columns.is_nullable as "IS_NULLABLE", pg_description.description as COLUMN_COMMENT FROM information_schema.columns JOIN pg_catalog.pg_class ON pg_class.relname = ? JOIN pg_catalog.pg_attribute ON pg_class.oid = pg_attribute.attrelid AND columns.column_name = pg_attribute.attname LEFT JOIN pg_catalog.pg_description ON pg_attribute.attrelid = pg_description.objoid AND pg_attribute.attnum = pg_description.objsubid WHERE table_schema NOT IN ('pg_catalog','information_schema') AND table_name = ? order by ordinal_position;`,
}
